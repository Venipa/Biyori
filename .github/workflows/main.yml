# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
    - name: restore packages
      run: nuget restore Biyori.sln
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    - name: Build
      run: msbuild Biyori.sln -p:Configuration=Release
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        zip -r release.zip -j Biyori/bin/Release/*.dll Biyori/bin/Release/*.exe README.md LICENSE.md
    - name: Create a Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Pre Release ${{ github.ref }}
        draft: false
        prerelease: true
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./release.zip
        asset_name: release-${{ steps.create_release.outputs.id }}.zip
        asset_content_type: application/zip
