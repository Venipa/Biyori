<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Biyori.Lib.Styles">
    <SolidColorBrush x:Key="ProgressBar.Progress" Color="#000000"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
    <Style x:Key="darkProgress" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="Opacity" Value=".8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ElasticEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25">

                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ElasticEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25">

                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ElasticEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5">
                                                <EasingPointKeyFrame.EasingFunction>
                                                    <ElasticEase/>
                                                </EasingPointKeyFrame.EasingFunction>
                                            </EasingPointKeyFrame>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5">

                                                <EasingPointKeyFrame.EasingFunction>
                                                    <ElasticEase/>
                                                </EasingPointKeyFrame.EasingFunction>
                                            </EasingPointKeyFrame>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5">

                                                <EasingPointKeyFrame.EasingFunction>
                                                    <ElasticEase/>
                                                </EasingPointKeyFrame.EasingFunction>
                                            </EasingPointKeyFrame>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <Grid>
                                <Border x:Name="MaskBorder" Background="{TemplateBinding Background}" CornerRadius="3.5" />

                                <Grid x:Name="MainGrid">
                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=MaskBorder}" />
                                    </Grid.OpacityMask>

                                    <Rectangle x:Name="PART_Track" Fill="Transparent" />

                                    <Border x:Name="PART_Indicator" HorizontalAlignment="Left">
                                        <Grid x:Name="Foreground">
                                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Background}" />
                                            <Grid x:Name="Animation" ClipToBounds="true">
                                                <Rectangle x:Name="PART_GlowRect" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="100" />
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Grid>

                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>